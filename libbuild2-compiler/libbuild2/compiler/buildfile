intf_libs = # Interface dependencies.
impl_libs = # Implementation dependencies.

import impl_libs += build2%lib{build2}     # Implied interface dependency.
import impl_libs += build2%lib{build2-cxx} # For ?xx{} target types.

lib{build2-compiler}: {hxx ixx txx cxx}{**} $impl_libs $intf_libs

# Build options.
#
cxx.poptions =+ "-I$out_root" "-I$src_root"

obja{*}: cxx.poptions += -DLIBBUILD2_COMPILER_STATIC_BUILD
objs{*}: cxx.poptions += -DLIBBUILD2_COMPILER_SHARED_BUILD

# Export options.
#
lib{build2-compiler}:
{
  cxx.export.poptions = "-I$out_root" "-I$src_root"
  cxx.export.libs = $intf_libs
}

liba{build2-compiler}: cxx.export.poptions += -DLIBBUILD2_COMPILER_STATIC
libs{build2-compiler}: cxx.export.poptions += -DLIBBUILD2_COMPILER_SHARED

# For pre-releases use the complete version to make sure they cannot be used
# in place of another pre-release or the final version. See the version module
# for details on the version.* variable values.
#
if $version.pre_release
  lib{build2-compiler}: bin.lib.version = "-$version.project_id"
else
  lib{build2-compiler}: bin.lib.version = "-$version.major.$version.minor"

# Embed the build system core version as our load suffix.
#
libs{build2-compiler}: bin.lib.load_suffix = "-$build.version.interface"

# Install into the libbuild2/compiler/ subdirectory of, say, /usr/include/
# recreating subdirectories.
#
{hxx ixx txx}{*}:
{
  install         = include/libbuild2/compiler/
  install.subdirs = true
}
